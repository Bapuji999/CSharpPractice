// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project5.Data;

#nullable disable

namespace Project5.Migrations
{
    [DbContext(typeof(DataContex))]
    [Migration("20231220044712_Rating Added")]
    partial class RatingAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Project5.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Project5.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Rating")
                        .HasColumnType("double");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("VendorId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Project5.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RollId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "admin999@gmail.com",
                            IsActive = true,
                            Password = "Admin1",
                            Phone = "9874563210",
                            RollId = 1,
                            UserName = "Admin1"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "vendor999@gmail.com",
                            IsActive = true,
                            Password = "vendor1",
                            Phone = "7896543210",
                            RollId = 2,
                            UserName = "vendor1"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "vendor99@gmail.com",
                            IsActive = true,
                            Password = "vendor2",
                            Phone = "6985741237",
                            RollId = 2,
                            UserName = "vendor2"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "vendor9@gmail.com",
                            IsActive = true,
                            Password = "vendor3",
                            Phone = "6985231475",
                            RollId = 2,
                            UserName = "vendor3"
                        },
                        new
                        {
                            UserId = 5,
                            Email = "bipin@gmail.com",
                            IsActive = true,
                            Password = "customer1",
                            Phone = "7458963215",
                            RollId = 3,
                            UserName = "Bipin"
                        },
                        new
                        {
                            UserId = 6,
                            Email = "harsha@gmail.com",
                            IsActive = true,
                            Password = "customer2",
                            Phone = "8596741235",
                            RollId = 3,
                            UserName = "Harsha"
                        },
                        new
                        {
                            UserId = 7,
                            Email = "laxman@gmail.com",
                            IsActive = true,
                            Password = "customer3",
                            Phone = "9632587451",
                            RollId = 3,
                            UserName = "Laxman"
                        },
                        new
                        {
                            UserId = 8,
                            Email = "nihar@gmail.com",
                            IsActive = true,
                            Password = "customer4",
                            Phone = "8574963214",
                            RollId = 3,
                            UserName = "Nihar"
                        });
                });

            modelBuilder.Entity("Project5.Models.UserRoll", b =>
                {
                    b.Property<int>("RollId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("RollType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RollId");

                    b.ToTable("UserRolls");

                    b.HasData(
                        new
                        {
                            RollId = 1,
                            RollType = "Admin"
                        },
                        new
                        {
                            RollId = 2,
                            RollType = "Vendor"
                        },
                        new
                        {
                            RollId = 3,
                            RollType = "Customer"
                        });
                });

            modelBuilder.Entity("Project5.Models.Product", b =>
                {
                    b.HasOne("Project5.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project5.Models.User", "Vendor")
                        .WithMany("Products")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Project5.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Project5.Models.User", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
